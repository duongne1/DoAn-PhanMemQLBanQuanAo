/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import dao.ChatLieuDAO;
import dao.KichThuocDAO;
import dao.LoaiSPDAO;
import dao.SanPhamDAO;
import entity.ChatLieu;
import entity.KichThuoc;
import entity.LoaiSP;
import entity.SanPham;
import helper.MessageDialogHelper;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import static ui.BanHang_Form.tblModel1;

/**
 *
 * @author ADMIN
 */
public class TimKiemSanPham_Form extends javax.swing.JPanel {

    public static DefaultTableModel tblModel;
    private MainForm parentForm;
    private KichThuocDAO kt_dao = new KichThuocDAO();
    private ChatLieuDAO cl_dao = new ChatLieuDAO();
    private LoaiSPDAO loai_dao = new LoaiSPDAO();

    /**
     * Creates new form TimKiemSanPham_Form
     */
    public TimKiemSanPham_Form() throws Exception {
        initComponents();

        List<KichThuoc> ls = kt_dao.finAll();
        for (KichThuoc item : ls) {

            cboKichThuoc.addItem(item.getTenKichThuoc());
        }

        List<ChatLieu> cl = cl_dao.finAll();
        for (ChatLieu item : cl) {
            cboChatLieu.addItem(item.getTenChatLieu());
        }

        List<LoaiSP> loai = loai_dao.finAll();
        for (LoaiSP item : loai) {
            cboLoaiSP.addItem(item.getTenLoai());
        }

        initTable();
        loadDataToTable();
    }

    private void initTable() {
        tblModel1 = new DefaultTableModel();
        tblModel1.setColumnIdentifiers(new String[]{"Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Nhãn hiệu", "Giá bán", "Số lượng", "Chất liệu", "Màu sắc", "Kích thước"});
        tblSP.setModel(tblModel1);
    }

    public void loadDataToTable() {
        try {
            DecimalFormat dft = new DecimalFormat("###,###,###");
            SanPhamDAO sp = new SanPhamDAO();
            List<SanPham> list = sp.finAll1();
            tblModel1.setRowCount(0);
            for (SanPham sanPham : list) {
                tblModel1.addRow(new Object[]{
                    sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                    sanPham.getNhanHieu(), dft.format(sanPham.getGia()), sanPham.getSoLuong(),
                    sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                    sanPham.getKichThuoc().getTenKichThuoc()
                });
            }
            tblModel1.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTenSP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboChatLieu = new javax.swing.JComboBox<>();
        cboKichThuoc = new javax.swing.JComboBox<>();
        btnTim = new javax.swing.JButton();
        btnXemTC = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        txtTenSP.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Tên sản phẩm:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Loại sản phẩm:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText("Chất liệu: ");

        cboLoaiSP.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSPActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setText("Kích thước:");

        cboChatLieu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboChatLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboChatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChatLieuActionPerformed(evt);
            }
        });

        cboKichThuoc.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cboKichThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKichThuocActionPerformed(evt);
            }
        });

        btnTim.setBackground(new java.awt.Color(0, 153, 153));
        btnTim.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search-icon-16.png"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnXemTC.setBackground(new java.awt.Color(0, 153, 153));
        btnXemTC.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXemTC.setText("Xem tất cả");
        btnXemTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemTCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cboChatLieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(btnTim)
                        .addGap(18, 18, 18)
                        .addComponent(btnXemTC)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTim)
                    .addComponent(btnXemTC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblSP.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSPActionPerformed
        try {
            String loai = cboLoaiSP.getSelectedItem().toString();
            String ma;

            if (loai.equals("Áo")) {
                ma = "LH1";
            } else if (loai.equals("Quần")) {
                ma = "LH2";
            } else {
                ma = "LH0";
            }

            if (ma.equals("LH0")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.finAll1();
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            }

            if (ma.equals("LH1")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoMaLoai(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            }

            if (ma.equals("LH2")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoMaLoai(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_cboLoaiSPActionPerformed

    private void cboChatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChatLieuActionPerformed
        try {
            String chatLieu = cboChatLieu.getSelectedItem().toString();
            String ma;
            if (chatLieu.equals("Vải Cotton")) {
                ma = "CL1";
            } else if (chatLieu.equals("Vải Kaki")) {
                ma = "CL2";
            } else if (chatLieu.equals("Vải Jean")) {
                ma = "CL3";
            } else if (chatLieu.equals("Vải Kate")) {
                ma = "CL4";
            } else if (chatLieu.equals("Vải Nỉ")) {
                ma = "CL10";
            } else {
                ma = "CL0";
            }

            if (ma.equals("CL0")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.finAll1();
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (ma.equals("CL1")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoChatLieu(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (ma.equals("CL2")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoChatLieu(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (ma.equals("CL3")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoChatLieu(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (ma.equals("CL4")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoChatLieu(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (ma.equals("CL10")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoChatLieu(ma);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_cboChatLieuActionPerformed

    private void cboKichThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKichThuocActionPerformed
        try {
            String kichThuoc = cboKichThuoc.getSelectedItem().toString();
            String kt;

            if (kichThuoc.equals("S         ")) {
                kt = "KT1";
            } else if (kichThuoc.equals("M         ")) {
                kt = "KT2";
            } else if (kichThuoc.equals("L         ")) {
                kt = "KT3";
            } else if (kichThuoc.equals("XL        ")) {
                kt = "KT4";
            } else if (kichThuoc.equals("XXL       ")) {
                kt = "KT5";
            } else {
                kt = "KT0";
            }

            if (kt.equals("KT1")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoKichThuoc(kt);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (kt.equals("KT2")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoKichThuoc(kt);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (kt.equals("KT3")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoKichThuoc(kt);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (kt.equals("KT4")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoKichThuoc(kt);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else if (kt.equals("KT5")) {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.getDSSPTheoKichThuoc(kt);
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            } else {
                xoaDLTable();
                SanPhamDAO sp = new SanPhamDAO();
                List<SanPham> list = sp.finAll1();
                tblModel1.setRowCount(0);
                for (SanPham sanPham : list) {
                    tblModel1.addRow(new Object[]{
                        sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                        sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                        sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                        sanPham.getKichThuoc().getTenKichThuoc()
                    });
                }
                tblModel1.fireTableDataChanged();
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_cboKichThuocActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        try {
            String tenSP = txtTenSP.getText();
            xoaDLTable();
            SanPhamDAO sp = new SanPhamDAO();
            List<SanPham> list = sp.getDSSPTheoTen(tenSP);
            tblModel1.setRowCount(0);
            for (SanPham sanPham : list) {
                tblModel1.addRow(new Object[]{
                    sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getLoaiSP().getTenLoai(),
                    sanPham.getNhanHieu(), sanPham.getGia(), sanPham.getSoLuong(),
                    sanPham.getChatLieu().getTenChatLieu(), sanPham.getMauSac().getTenMau(),
                    sanPham.getKichThuoc().getTenKichThuoc()
                });
            }
            tblModel1.fireTableDataChanged();
        } catch (Exception ex) {
            Logger.getLogger(TimKiemSanPham_Form.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnTimActionPerformed

    private void btnXemTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemTCActionPerformed
       xoaDLTable();
       loadDataToTable();
    }//GEN-LAST:event_btnXemTCActionPerformed

    public void xoaDLTable() {
        for (int i = tblModel1.getRowCount() - 1; i >= 0; i--) {
            tblModel1.removeRow(i);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXemTC;
    private javax.swing.JComboBox<String> cboChatLieu;
    private javax.swing.JComboBox<String> cboKichThuoc;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSP;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
