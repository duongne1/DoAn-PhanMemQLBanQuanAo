/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import connect.DatabaseHelper;
import dao.ChiTietDonHangDAO;
import dao.ChiTietHDDAO;
import dao.DonDatHangDAO;
import dao.HoaDonDAO;
import dao.KhachHangDAO;
import dao.NhanVienDAO;
import dao.SanPhamDAO;
import entity.ChiTietDonHang;
import entity.ChiTietHD;
import entity.DonDatHang;
import entity.HoaDon;
import entity.KhachHang;
import entity.NhanVien;
import entity.SanPham;
import helper.MessageDialogHelper;
import helper.SharedData;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import static ui.MainForm.tblMain;
import static ui.QLHoaDon_Form.tblHoaDon;
import static ui.QLHoaDon_Form.tblModel;

/**
 *
 * @author ADMIN
 */
public class DonDatHang_Form extends javax.swing.JPanel {

    private BanHang_Form mBanHang;
    private XuatHoaDonBH_Form xuatHD;
    private static ChiTietHD CTHD = new ChiTietHD();
    public static ArrayList<ChiTietDonHang> listCTHD = new ArrayList<>();
    private static KhachHang khachHang = null;
    private NhanVienDAO nv_dao;
    private HoaDonDAO hd_dao;
    private DonDatHangDAO dh_dao;
    private ChiTietDonHangDAO ctdh_dao;
    private ChiTietHDDAO cthd_dao;
    private KhachHangDAO kh_dao;
    private static MainForm parentForm;
    public static DefaultTableModel tblModel;
    private SanPhamDAO sp_dao;

    /**
     * Creates new form DatHangForm
     */
    public DonDatHang_Form() throws Exception {
        xuatHD = new XuatHoaDonBH_Form();
        nv_dao = new NhanVienDAO();
        hd_dao = new HoaDonDAO();
        kh_dao = new KhachHangDAO();
        ctdh_dao = new ChiTietDonHangDAO();
        cthd_dao = new ChiTietHDDAO();
        dh_dao = new DonDatHangDAO();
        sp_dao = new SanPhamDAO();
        initComponents();

        initTable();
        loadDataToTable();

        jPanel2.setFocusable(true);
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã đơn hàng", "Nhân viên", "Khách hàng", "Ngày đặt hàng", "Tổng tiền"});
        tblDonHang.setModel(tblModel);
    }

    public static void loadDataToTable() {
        try {
            DecimalFormat dft = new DecimalFormat("###,###,### VND");
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            DonDatHangDAO dh = new DonDatHangDAO();
            List<DonDatHang> list = dh.finAll();
            for (DonDatHang donDatHang : list) {
                tblModel.addRow(new Object[]{
                    donDatHang.getMaDH(), donDatHang.getNhanVien().getHoTen(), donDatHang.getKhachHang().getHoTen(),
                    sdf.format(donDatHang.getNgayDatHang()), dft.format(donDatHang.getTongTien())
                });
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    public static void xoaDLTable() {
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtTienKhach = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnMuaThem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnHuyDon = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        txtSDTKH = new javax.swing.JTextField();
        btnCTDH = new javax.swing.JButton();
        txtDiaChi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        lblTongTien = new javax.swing.JLabel();
        lblTienTra = new javax.swing.JLabel();
        ckoXuatHD = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đơn đặt hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblDonHang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDonHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDonHang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtTienKhach.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtTienKhach.setText("Tiền khách đưa");
        txtTienKhach.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTienKhachFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTienKhachFocusLost(evt);
            }
        });
        txtTienKhach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienKhachActionPerformed(evt);
            }
        });

        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search-icon-32.png"))); // NOI18N
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Tiền trả lại:");

        btnMuaThem.setBackground(new java.awt.Color(0, 153, 153));
        btnMuaThem.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnMuaThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-to-cart.png"))); // NOI18N
        btnMuaThem.setText("Mua thêm");
        btnMuaThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuaThemActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Tìm kiếm khách hàng theo số điện thoại:");

        btnHuyDon.setBackground(new java.awt.Color(0, 153, 153));
        btnHuyDon.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnHuyDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-edit-delete-icon-16.png"))); // NOI18N
        btnHuyDon.setText("Huỷ đơn");
        btnHuyDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDonActionPerformed(evt);
            }
        });

        txtTim.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Chi tiết đơn đặt:");

        txtTenKH.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtTenKH.setText("Tên khách hàng");
        txtTenKH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenKHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenKHFocusLost(evt);
            }
        });

        btnThanhToan.setBackground(new java.awt.Color(0, 153, 153));
        btnThanhToan.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/payment-method.png"))); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        txtSDTKH.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtSDTKH.setText("Số điện thoại");
        txtSDTKH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSDTKHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSDTKHFocusLost(evt);
            }
        });

        btnCTDH.setBackground(new java.awt.Color(0, 153, 153));
        btnCTDH.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnCTDH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file.png"))); // NOI18N
        btnCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTDHActionPerformed(evt);
            }
        });

        txtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtDiaChi.setText("Địa chỉ");
        txtDiaChi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDiaChiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiaChiFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Tổng tiền:");

        btnLamMoi.setBackground(new java.awt.Color(0, 153, 153));
        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lam_moi.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        lblTongTien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 51));
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongTien.setText("0 VND");

        lblTienTra.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTienTra.setForeground(new java.awt.Color(255, 0, 51));
        lblTienTra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTienTra.setText("0 VND");

        ckoXuatHD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckoXuatHD.setText("Xuất hoá đơn");
        ckoXuatHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckoXuatHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtTenKH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTienKhach)
                                    .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnMuaThem)
                                .addGap(18, 18, 18)
                                .addComponent(btnHuyDon)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(btnCTDH)
                                .addGap(47, 47, 47)
                                .addComponent(btnThanhToan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ckoXuatHD))))
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTim, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTienKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCTDH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnMuaThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnHuyDon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckoXuatHD)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        try {
            int row = tblDonHang.getSelectedRow();
            if (row != -1) {
                if (MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn thanh toán hoá đơn này?", "Hỏi")
                        == JOptionPane.NO_OPTION) {
                    return;
                }
                HoaDon hd = new HoaDon();
                String maDH = tblModel.getValueAt(row, 0).toString();

                String maTK = SharedData.nguoiDangNhap.getMaTK();
                NhanVien nv = nv_dao.getNhanVienTheoMaTK(maTK);
                hd.setNhanVien(nv);

                KhachHang kh = kh_dao.getKhachHangTheoMaDH(maDH);
                Date currentDate = new Date(Calendar.getInstance().getTime().getTime());
                hd.setNgayLapHD(currentDate);
                hd.setKhachHang(kh);

                DonDatHang dh = dh_dao.getDonDatHangByID(maDH);
                Float tongTien = dh.getTongTien();
                hd.setTongTien(tongTien);
                hd_dao.insert(hd);

                HoaDon hd1 = hd_dao.getTop1HD();
                CTHD.setHoaDon(hd1);

                listCTHD = (ArrayList<ChiTietDonHang>) ctdh_dao.getDSCTDHTheoDH(maDH);
                for (ChiTietDonHang chiTietDonHang : listCTHD) {
                    CTHD.setSanPham(chiTietDonHang.getSanPham());
                    CTHD.setSoLuong(chiTietDonHang.getSoLuong());
                    cthd_dao.insert(CTHD);

                }

                JOptionPane.showMessageDialog(null, "Thanh toán thành công");
                if (ckoXuatHD.isSelected()) {
//                    XuatHoaDonBH_Form a;
//                    a = new XuatHoaDonBH_Form();
//                    a.setLocationRelativeTo(parentForm);
//                    InHD();
//                    a.setVisible(true);
//                    a.printingHoaDon();

                    
            String maHD = hd1.getMaHD();
            Hashtable map = new Hashtable();
            JasperReport report = JasperCompileManager.compileReport("src/ui/rpt.jrxml");
            map.put("maHD", maHD);
            java.sql.Connection con = DatabaseHelper.opConnection(); 
            JasperPrint p = JasperFillManager.fillReport(report, map, con);
            JasperViewer.viewReport(p, false);
            JasperExportManager.exportReportToPdfFile(p, "test.pdf");


                }

                for (ChiTietDonHang chiTietDonHang : listCTHD) {
                    CTHD.setSanPham(chiTietDonHang.getSanPham());
                    CTHD.setSoLuong(chiTietDonHang.getSoLuong());
                    int sl = chiTietDonHang.getSanPham().getSoLuong();
                    int slmua = chiTietDonHang.getSoLuong();
                    int soLuong = sl - slmua;
                    chiTietDonHang.getSanPham().setSoLuong(soLuong);
                    sp_dao.update(chiTietDonHang.getSanPham());
                }
                ctdh_dao.delete(maDH);
                dh_dao.delete(maDH);
                tblModel.removeRow(row);

            } else {
                MessageDialogHelper.showMessageDialog(parentForm, "Bạn cần chọn đơn hàng muốn thanh toán", "Thông báo");
            }

        } catch (Exception ex) {
            Logger.getLogger(BanHang_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    public void InHD() throws Exception {
        HoaDon hd5 = hd_dao.getTop1HD();
        String maTK = SharedData.nguoiDangNhap.getMaTK();
        NhanVien nv = nv_dao.getNhanVienTheoMaTK(maTK);
        String tenNV = nv.getHoTen();
//        JOptionPane.showMessageDialog(parentForm, tenNV);
//                JOptionPane.showMessageDialog(parentForm, hd5.getMaHD());
        String diaChi = txtDiaChi.getText();
        String sdt = txtSDTKH.getText();
        String tenKH = txtTenKH.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate = new Date(Calendar.getInstance().getTime().getTime());
        String ngay = dateFormat.format(currentDate);
        String maHD = hd5.getMaHD();

        DecimalFormat dft = new DecimalFormat("###,###,### VND");
        xuatHD.lblDiaChi.setText(diaChi);
        xuatHD.lblNV.setText(tenNV);
        xuatHD.lblKH.setText(tenKH);
        xuatHD.lblNgayLap.setText(ngay);
        xuatHD.lblSDT.setText(sdt);
        xuatHD.lblMaHD.setText(maHD);

        double tienNhan = Double.valueOf(txtTienKhach.getText());
        String tienTra = lblTienTra.getText();
        xuatHD.lblTienNhan.setText(dft.format((tienNhan)));
        xuatHD.lblTienTra.setText(tienTra);
        List<ChiTietHD> listCTHD = cthd_dao.getCTHDTheoMaDH(hd5.getMaHD());
        int i = 0;
        float thanhTien = 0;
        for (ChiTietHD chiTietHD : listCTHD) {
            i++;

            xuatHD.tblModel1.addRow(new Object[]{
                i, chiTietHD.getSanPham().getTenSP(), chiTietHD.getSanPham().getKichThuoc().getTenKichThuoc(),
                chiTietHD.getSanPham().getGia(), chiTietHD.getSoLuong(), dft.format(chiTietHD.getSanPham().getGia() * chiTietHD.getSoLuong())

            });
            thanhTien += chiTietHD.getSanPham().getGia() * chiTietHD.getSoLuong();
            xuatHD.lblTongTien.setText(dft.format(thanhTien));
        }

    }


    private void txtTenKHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenKHFocusGained
        if (txtTenKH.getText().trim().equals("Tên khách hàng")) {
            txtTenKH.setText("");
        }
        txtTenKH.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtTenKHFocusGained

    private void txtTenKHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenKHFocusLost
        if (txtTenKH.getText().trim().equals("")) {
            txtTenKH.setText("Tên khách hàng");
        }
        txtTenKH.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_txtTenKHFocusLost

    private void txtSDTKHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTKHFocusGained
        if (txtSDTKH.getText().trim().equals("Số điện thoại")) {
            txtSDTKH.setText("");
        }
        txtSDTKH.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtSDTKHFocusGained

    private void txtSDTKHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTKHFocusLost
        if (txtSDTKH.getText().trim().equals("")) {
            txtSDTKH.setText("Số điện thoại");
        }
        txtSDTKH.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_txtSDTKHFocusLost

    private void txtDiaChiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiaChiFocusGained
        if (txtDiaChi.getText().trim().equals("Địa chỉ")) {
            txtDiaChi.setText("");
        }
        txtDiaChi.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtDiaChiFocusGained

    private void txtDiaChiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiaChiFocusLost
        if (txtDiaChi.getText().trim().equals("")) {
            txtDiaChi.setText("Địa chỉ");
        }
        txtDiaChi.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_txtDiaChiFocusLost

    private void txtTienKhachFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTienKhachFocusGained
        if (txtTienKhach.getText().trim().equals("Tiền khách đưa")) {
            txtTienKhach.setText("");
        }
        txtTienKhach.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtTienKhachFocusGained

    private void txtTienKhachFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTienKhachFocusLost
        if (txtTienKhach.getText().trim().equals("")) {
            txtTienKhach.setText("Tiền khách đưa");
        }
        txtTienKhach.setForeground(new Color(204, 204, 204));
    }//GEN-LAST:event_txtTienKhachFocusLost

    private void btnCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTDHActionPerformed
        int row = tblDonHang.getSelectedRow();
        if (row != -1) {
            ChiTietDonHang_Form a;
            try {
                a = new ChiTietDonHang_Form(parentForm, true);
                a.setLocationRelativeTo(parentForm);
                a.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(DonDatHang_Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(parentForm, "Bạn cần chọn đơn đặt hàng để xem chi tiết");
        }
    }//GEN-LAST:event_btnCTDHActionPerformed

    private void tblDonHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHangMouseClicked
        try {
            int row = tblDonHang.getSelectedRow();

            if (row >= 0) {
                String id = (String) tblDonHang.getValueAt(row, 0);
                DonDatHang dh = dh_dao.getDonDatHangByID(id);
                if (dh != null) {
                    txtTenKH.setText(dh.getKhachHang().getHoTen());
                    txtSDTKH.setText(dh.getKhachHang().getSoDT());
                    txtDiaChi.setText(dh.getKhachHang().getDiaChi());
                    String tien = (String) tblModel.getValueAt(row, 4);
                    lblTongTien.setText(tien);
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(DonDatHang_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblDonHangMouseClicked

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            DecimalFormat dft = new DecimalFormat("###,###,### VND");
            String ma = txtTim.getText();
            DonDatHang dh = dh_dao.getDSDHTheoSDTKH(ma);
            xoaDLTable();
            tblModel.addRow(new Object[]{
                dh.getMaDH(), dh.getNhanVien().getHoTen(), dh.getKhachHang().getHoTen(),
                sdf.format(dh.getNgayDatHang()), dft.format(dh.getTongTien())
            });
        } catch (Exception ex) {
            Logger.getLogger(QLHoaDon_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        xoaDLTable();
        loadDataToTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void txtTienKhachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienKhachActionPerformed
        int row = tblDonHang.getSelectedRow();
        if (row >= 0) {
            try {
                String id = (String) tblDonHang.getValueAt(row, 0);
                DonDatHang dh = dh_dao.getDonDatHangByID(id);
                String tienThuKhach = txtTienKhach.getText();
                if (!tienThuKhach.matches("^[0-9]{1,}$")) {
                    JOptionPane.showMessageDialog(parentForm, "Tiền khách đưa phải là số >0");
                } else {
                    if (dh != null) {
                        float tien = (float) dh.getTongTien();
                        DecimalFormat dft = new DecimalFormat("###,###,### VND");
                        double tienKhach = Double.valueOf(txtTienKhach.getText());
                        double tienTra = tienKhach - tien;
                        if (tienKhach >= tien) {
                            lblTienTra.setText(dft.format(tienTra));
                        } else {
                            lblTienTra.setText("0VND");
                        }
                    }
                }

            } catch (Exception ex) {
                Logger.getLogger(DonDatHang_Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtTienKhachActionPerformed

    private void ckoXuatHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckoXuatHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckoXuatHDActionPerformed

    private void btnMuaThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuaThemActionPerformed

        try {
            int row = tblDonHang.getSelectedRow();
            if (row != -1) {
                mBanHang = new BanHang_Form();
                tblMain.removeAll();
                tblMain.addTab("Quản lý bán hàng", mBanHang);
                tblMain.setSelectedComponent(mBanHang);
                String id = (String) tblDonHang.getValueAt(row, 0);
                KhachHang kh = kh_dao.getKhachHangTheoMaDH(id);
                KhachHang a = kh_dao.getKhachHangByID(kh.getMaKH());
                BanHang_Form.txtSDTKH.setText(a.getSoDT());
                BanHang_Form.txtDiaChi.setText(a.getDiaChi());
                BanHang_Form.txtTenKH.setText(a.getHoTen());

                DonDatHang dh = dh_dao.getDonDatHangByID(id);

            } else {
                JOptionPane.showMessageDialog(parentForm, "Bạn cần chọn mot đơn đặt hàng để mua them");
            }
        } catch (Exception ex) {
            Logger.getLogger(DonDatHang_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMuaThemActionPerformed

    private void btnHuyDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDonActionPerformed
        int row = tblDonHang.getSelectedRow();
        if (row != -1) {
            if (MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn huỷ đơn hàng này không?", "Hỏi")
                    == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                String id = tblModel.getValueAt(row, 0).toString();

                List<ChiTietDonHang> list = ctdh_dao.getDSCTDHTheoDH(id);
                for (ChiTietDonHang chiTietDonHang : list) {
                    SanPham sp = chiTietDonHang.getSanPham();
                    int sl = chiTietDonHang.getSoLuong();
                    int slsp = sp.getSoLuong();
                    int slTong = sl + slsp;
                    sp.setSoLuong(slTong);
                    sp_dao.update(sp);
                }
                ctdh_dao.delete(id);
                if (dh_dao.delete(id)) {
                    MessageDialogHelper.showMessageDialog(parentForm, "Đã huỷ đơn hàng", "Thông báo");
                    xoaDLTable();
                    loadDataToTable();
                } else {
                    MessageDialogHelper.showMessageDialog(parentForm, "Huỷ thất bại", "Cảnh báo");
                }
            } catch (Exception e) {
                e.printStackTrace();
                MessageDialogHelper.showErrorDialog(parentForm,
                        e.getMessage(), "Lỗi");
            }
        } else {
            MessageDialogHelper.showMessageDialog(parentForm, "Bạn cần chọn dòng để xoá", "Thông báo");
        }
    }//GEN-LAST:event_btnHuyDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTDH;
    private javax.swing.JButton btnHuyDon;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnMuaThem;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTim;
    private javax.swing.JCheckBox ckoXuatHD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel lblTienTra;
    public static javax.swing.JLabel lblTongTien;
    public static javax.swing.JTable tblDonHang;
    public static javax.swing.JTextField txtDiaChi;
    public static javax.swing.JTextField txtSDTKH;
    public static javax.swing.JTextField txtTenKH;
    public static javax.swing.JTextField txtTienKhach;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
