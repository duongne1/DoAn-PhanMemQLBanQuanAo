/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import dao.NhanVienDAO;
import entity.NhanVien;
import helper.MessageDialogHelper;
import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class TimKiemNhanVien_Form extends javax.swing.JPanel {

    private DefaultTableModel tblModel;
    private MainForm parentForm;
    private NhanVienDAO nv_dao;

    /**
     * Creates new form TimKiemNhanVien_Form
     */
    public TimKiemNhanVien_Form() {
        nv_dao = new NhanVienDAO();
        initComponents();

        initTable();
        loadDataToTable();
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã nhân viên", "Tên nhân viên", "Giới tính", "Ngày sinh", "CMND", "Số điện thoại", "Địa chỉ", "Chức vụ"});
        tblNV.setModel(tblModel);
    }

    public void loadDataToTable() {
        try {
            NhanVienDAO nv = new NhanVienDAO();
            List<NhanVien> list = nv.finAll();

            tblModel.setRowCount(0);
            for (NhanVien nhanVien : list) {
                String gt = "";
                if (nhanVien.isGioiTinh() == true) {
                    gt = "Nam";
                } else {
                    gt = "Nữ";
                }
                {

                    tblModel.addRow(new Object[]{
                        nhanVien.getMaNV(), nhanVien.getHoTen(), gt, nhanVien.getNgaySinh(), nhanVien.getCmnd(),
                        nhanVien.getSoDT(), nhanVien.getDiaChi(), nhanVien.getTaiKhoan().getVaiTro()
                    });
                }
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        cboCV = new javax.swing.JComboBox<>();
        btnLamMoi = new javax.swing.JButton();
        btnTimNV = new javax.swing.JButton();
        btnXemTC = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNV = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Tên nhân viên:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Chức vụ:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Số điện thoại:");

        txtTenNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtTenNV.setText("Nhập vào họ hoặc tên để tìm");
        txtTenNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenNVFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenNVFocusLost(evt);
            }
        });
        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        txtSDT.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtSDT.setText("Nhập số điện thoại để tìm");
        txtSDT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSDTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSDTFocusLost(evt);
            }
        });

        cboCV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboCV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên" }));
        cboCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCVActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(0, 153, 153));
        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lam_moi.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnTimNV.setBackground(new java.awt.Color(0, 153, 153));
        btnTimNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnTimNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search-icon-16.png"))); // NOI18N
        btnTimNV.setText("Tìm kiếm");
        btnTimNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimNVActionPerformed(evt);
            }
        });

        btnXemTC.setBackground(new java.awt.Color(0, 153, 153));
        btnXemTC.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXemTC.setText("Xem tất cả");
        btnXemTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemTCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cboCV, javax.swing.GroupLayout.Alignment.LEADING, 0, 242, Short.MAX_VALUE)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTimNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXemTC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXemTC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboCV, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimNV, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNV);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed

    private void tblNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNVMouseClicked
        try {
            int row = tblNV.getSelectedRow();
            if (row >= 0) {
                String id = (String) tblNV.getValueAt(row, 0);
                NhanVien nv = nv_dao.getNhanVienByID(id);
                if (nv != null) {
                    txtTenNV.setText(nv.getHoTen());
                    txtSDT.setText(nv.getSoDT());
                    String cv = nv.getTaiKhoan().getVaiTro();
                    if (cv.equals("Nhân viên")) {
                        cboCV.setSelectedIndex(1);
                    } else {
                        cboCV.setSelectedIndex(0);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblNVMouseClicked

    private void btnTimNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimNVActionPerformed
        try {
            String ten = txtTenNV.getText();
            String sdt = txtSDT.getText();
            NhanVienDAO nv = new NhanVienDAO();
            if (ten.equals("") && sdt.equals("")) {
                JOptionPane.showMessageDialog(parentForm, "Cần nhập thông tin để tìm");
            } else if (ten.equals("")) {
                NhanVien a = nv.getNhanVienTheoSDT(sdt);
                tblModel.setRowCount(0);
                String gt = "";
                if (a.isGioiTinh() == true) {
                    gt = "Nam";
                } else {
                    gt = "Nữ";
                }
                {
                    tblModel.addRow(new Object[]{
                        a.getMaNV(), a.getHoTen(), gt, a.getNgaySinh(), a.getCmnd(),
                        a.getSoDT(), a.getDiaChi(), a.getTaiKhoan().getVaiTro()
                    });
                }
            } else {
                List<NhanVien> list = nv.getNhanVienTheoTen(ten);

                tblModel.setRowCount(0);
                for (NhanVien nhanVien : list) {
                    String gt = "";
                    if (nhanVien.isGioiTinh() == true) {
                        gt = "Nam";
                    } else {
                        gt = "Nữ";
                    }
                    {

                        tblModel.addRow(new Object[]{
                            nhanVien.getMaNV(), nhanVien.getHoTen(), gt, nhanVien.getNgaySinh(), nhanVien.getCmnd(),
                            nhanVien.getSoDT(), nhanVien.getDiaChi(), nhanVien.getTaiKhoan().getVaiTro()
                        });
                    }
                }
            }

            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnTimNVActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        txtTenNV.setText("");
        txtSDT.setText("");
        cboCV.setSelectedIndex(0);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void txtTenNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenNVFocusGained
        if (txtTenNV.getText().trim().equals("Nhập vào họ hoặc tên để tìm")) {
            txtTenNV.setText("");
        }
        txtTenNV.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtTenNVFocusGained

    private void txtTenNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenNVFocusLost
        if (txtTenNV.getText().trim().equals("")) {
            txtTenNV.setText("Nhập vào họ hoặc tên để tìm");
        }
        txtTenNV.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtTenNVFocusLost

    private void txtSDTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTFocusGained
        if (txtSDT.getText().trim().equals("Nhập số điện thoại để tìm")) {
            txtSDT.setText("");
        }
        txtSDT.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtSDTFocusGained

    private void txtSDTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTFocusLost
        if (txtSDT.getText().trim().equals("")) {
            txtSDT.setText("Nhập số điện thoại để tìm");
        }
        txtSDT.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtSDTFocusLost

    public void xoaDLTable() {
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }
    private void btnXemTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemTCActionPerformed
        xoaDLTable();
        loadDataToTable();
    }//GEN-LAST:event_btnXemTCActionPerformed

    private void cboCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCVActionPerformed
        try {
            xoaDLTable();
            String chucVu = (String) cboCV.getSelectedItem();
            List<NhanVien> list = nv_dao.getNhanVienTheoChucVu(chucVu);
            for (NhanVien nhanVien : list) {
                String gt = "";
                if (nhanVien.isGioiTinh() == true) {
                    gt = "Nam";
                } else {
                    gt = "Nữ";
                }
                {

                    tblModel.addRow(new Object[]{
                        nhanVien.getMaNV(), nhanVien.getHoTen(), gt, nhanVien.getNgaySinh(), nhanVien.getCmnd(),
                        nhanVien.getSoDT(), nhanVien.getDiaChi(), nhanVien.getTaiKhoan().getVaiTro()
                    });
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TimKiemNhanVien_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboCVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTimNV;
    private javax.swing.JButton btnXemTC;
    private javax.swing.JComboBox<String> cboCV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
}
