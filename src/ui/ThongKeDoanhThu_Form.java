/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import connect.DatabaseHelper;
import dao.DonDatHangDAO;
import dao.HoaDonDAO;
import dao.ThongKeDoanhThuDAO;
import entity.HoaDon;
import helper.MessageDialogHelper;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import static ui.QLHoaDon_Form.parentForm;
import static ui.QLHoaDon_Form.tblHoaDon;
import static ui.QLHoaDon_Form.tblModel;

/**
 *
 * @author ADMIN
 */
public class ThongKeDoanhThu_Form extends javax.swing.JPanel {

    private MainForm parentForm;
    private DefaultTableModel tblModel;

    private ThongKeDoanhThuDAO tkdt_dao;
    private HoaDonDAO hd_dao;

    /**
     * Creates new form ThongKeDoanhThuForm
     */
    public ThongKeDoanhThu_Form() {
        tkdt_dao = new ThongKeDoanhThuDAO();
        hd_dao = new HoaDonDAO();
        initComponents();
        initTable();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ckThang = new javax.swing.JCheckBox();
        ckNam = new javax.swing.JCheckBox();
        ckNgay = new javax.swing.JCheckBox();
        btnThongKe = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnXemCT = new javax.swing.JButton();
        cboThang = new javax.swing.JComboBox<>();
        cboNam = new javax.swing.JComboBox<>();
        lbDoanhThu = new javax.swing.JLabel();
        dcsNgay = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thống kê doanh thu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Ngày:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Tháng:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Năm:");

        ckThang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckThang.setText("Thống kê theo tháng");
        ckThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckThangActionPerformed(evt);
            }
        });

        ckNam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckNam.setText("Thống kê theo năm");

        ckNgay.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckNgay.setText("Thống kê theo ngày");

        btnThongKe.setBackground(new java.awt.Color(0, 153, 153));
        btnThongKe.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/analysis.png"))); // NOI18N
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel5.setText("Doanh Thu:");

        btnXemCT.setBackground(new java.awt.Color(0, 153, 153));
        btnXemCT.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXemCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file.png"))); // NOI18N
        btnXemCT.setText("Xem chi tiết phiếu");
        btnXemCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemCTActionPerformed(evt);
            }
        });

        cboThang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cboNam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2021", "2020", "2019" }));

        lbDoanhThu.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbDoanhThu.setForeground(new java.awt.Color(255, 0, 0));
        lbDoanhThu.setText("0");

        dcsNgay.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ckNgay)
                                .addGap(222, 222, 222)
                                .addComponent(ckThang))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(ckNam))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnThongKe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXemCT))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dcsNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboNam, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboThang)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dcsNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ckNam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckThang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ckNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXemCT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách hoá đơn bán hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã hoá đơn", "Nhân viên", "Khách hàng", "Ngày đặt hàng", "Tổng tiền"});
        tblHoaDon.setModel(tblModel);
    }

    public void loadDataToTable() {
        try {
            DecimalFormat dft = new DecimalFormat("###,###,### VND");
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            HoaDonDAO hd = new HoaDonDAO();
            List<HoaDon> list = hd.finAll();
            tblModel.setRowCount(0);
            for (HoaDon hoaDon : list) {
                tblModel.addRow(new Object[]{
                    hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                    sdf.format(hoaDon.getNgayLapHD()), hoaDon.getTongTien()
                });
            }

            int tong = 0;
            int colum = tblHoaDon.getRowCount();
            for (int i = 0; i < colum; i++) {
                Double tongTien = Double.valueOf(tblModel.getValueAt(i, 4).toString());
                tong += tongTien;
            }

            lbDoanhThu.setText(dft.format(tong));

            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }
    private void ckThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckThangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckThangActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            if (ckNam.isSelected()&& ckThang.isSelected() == false  && ckNgay.isSelected() == false ) {
                xoaDLTable();
                String ma = cboNam.getSelectedItem().toString();
                    int nam = Integer.valueOf(cboNam.getSelectedItem().toString());
                    HoaDonDAO hd = new HoaDonDAO();
                    List<HoaDon> list = tkdt_dao.ThongKeDoanhThuTheoNam(nam);
                    tblModel.setRowCount(0);
                    for (HoaDon hoaDon : list) {
                        tblModel.addRow(new Object[]{
                            hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                            sdf.format(hoaDon.getNgayLapHD()), hoaDon.getTongTien()
                        });
                    }
                    DecimalFormat dft = new DecimalFormat("###,###,### VND");
                    int tong = 0;
                    int colum = tblHoaDon.getRowCount();
                    for (int i = 0; i < colum; i++) {
                        Double tongTien = Double.valueOf(tblModel.getValueAt(i, 4).toString());
                        tong += tongTien;
                    }
                    lbDoanhThu.setText(dft.format(tong));
                
            } else if (ckThang.isSelected()) {
                xoaDLTable();
                String ma1 = cboThang.getSelectedItem().toString();
                    String thang = cboThang.getSelectedItem().toString();
                    String nam = cboNam.getSelectedItem().toString();
                    HoaDonDAO hd = new HoaDonDAO();
                    List<HoaDon> list = tkdt_dao.ThongKeDoanhThuTheoThangNam(thang, nam);
                    tblModel.setRowCount(0);
                    for (HoaDon hoaDon : list) {
                        tblModel.addRow(new Object[]{
                            hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                            sdf.format(hoaDon.getNgayLapHD()), hoaDon.getTongTien()
                        });
                    }

                    DecimalFormat dft = new DecimalFormat("###,###,### VND");
                    int tong = 0;
                    int colum = tblHoaDon.getRowCount();
                    for (int i = 0; i < colum; i++) {
                        Double tongTien = Double.valueOf(tblModel.getValueAt(i, 4).toString());
                        tong += tongTien;
                    }

                    lbDoanhThu.setText(dft.format(tong));
                

            } else if (ckNgay.isSelected()) {
                xoaDLTable();
                Date ngay = dcsNgay.getDate();
                SimpleDateFormat sdfnam = new SimpleDateFormat("yyyy");
                SimpleDateFormat sdfthang = new SimpleDateFormat("MM");
                SimpleDateFormat sdfngay = new SimpleDateFormat("dd");

                String nam1 = sdfnam.format(ngay);
                String thang1 = sdfthang.format(ngay);;
                String ngay1 =  sdfngay.format(ngay);
                  
                  
                HoaDonDAO hd = new HoaDonDAO();
                List<HoaDon> list = tkdt_dao.ThongKeDoanhThuTheoNgayThangNam(ngay1, thang1, nam1);
                tblModel.setRowCount(0);
                for (HoaDon hoaDon : list) {
                    tblModel.addRow(new Object[]{
                        hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                        sdf.format(hoaDon.getNgayLapHD()), hoaDon.getTongTien()
                    });
                }
                DecimalFormat dft = new DecimalFormat("###,###,### VND");
                int tong = 0;
                int colum = tblHoaDon.getRowCount();
                for (int i = 0; i < colum; i++) {
                    Double tongTien = Double.valueOf(tblModel.getValueAt(i, 4).toString());
                    tong += tongTien;
                }

                lbDoanhThu.setText(dft.format(tong));
            } else {
                xoaDLTable();
                HoaDonDAO hd = new HoaDonDAO();
                List<HoaDon> list = hd.finAll();
                tblModel.setRowCount(0);
                for (HoaDon hoaDon : list) {
                    tblModel.addRow(new Object[]{
                        hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                        sdf.format(hoaDon.getNgayLapHD()), hoaDon.getTongTien()
                    });
                }
                DecimalFormat dft = new DecimalFormat("###,###,### VND");
                int tong = 0;
                int colum = tblHoaDon.getRowCount();
                for (int i = 0; i < colum; i++) {
                    Double tongTien = Double.valueOf(tblModel.getValueAt(i, 4).toString());
                    tong += tongTien;
                }

                lbDoanhThu.setText(dft.format(tong));
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }


    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnXemCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemCTActionPerformed
       try {
            int row = tblHoaDon.getSelectedRow();
            if (row != -1) {
                String maHD = tblModel.getValueAt(row, 0).toString();
                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rpt.jrxml");

                map.put("maHD", maHD);
                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            } else {
                MessageDialogHelper.showMessageDialog(parentForm, "Bạn cần chọn hoá đơn để xem chi tiết", "Thông báo");
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnXemCTActionPerformed

    public void xoaDLTable() {
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnXemCT;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JCheckBox ckNam;
    private javax.swing.JCheckBox ckNgay;
    private javax.swing.JCheckBox ckThang;
    private com.toedter.calendar.JDateChooser dcsNgay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDoanhThu;
    private javax.swing.JTable tblHoaDon;
    // End of variables declaration//GEN-END:variables
}
