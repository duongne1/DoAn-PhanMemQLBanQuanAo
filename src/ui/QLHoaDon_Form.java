/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import com.sun.jdi.connect.spi.Connection;
import connect.DatabaseHelper;
import dao.ChiTietHDDAO;
import dao.HoaDonDAO;
import entity.HoaDon;
import helper.MessageDialogHelper;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperReport;
//import net.sf.jasperreports.view.JasperViewer;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

import static ui.DonDatHang_Form.tblDonHang;

/**
 *
 * @author ADMIN
 */
public class QLHoaDon_Form extends javax.swing.JPanel {

    private HoaDonDAO hd_dao = new HoaDonDAO();
    public static MainForm parentForm;
    public static DefaultTableModel tblModel;

    /**
     * Creates new form HoaDon_Form
     */
    public QLHoaDon_Form() {
        initComponents();
        initTable();
        loadDataToTable();
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã hoá đơn", "Nhân viên", "Khách hàng", "Ngày đặt hàng", "Tổng tiền"});
        tblHoaDon.setModel(tblModel);
    }

    public static void loadDataToTable() {
        DecimalFormat dft = new DecimalFormat("###,###,### VND");
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            HoaDonDAO hd = new HoaDonDAO();
            List<HoaDon> list = hd.finAll();
//            tblModel.setRowCount(0);
            for (HoaDon hoaDon : list) {
                tblModel.addRow(new Object[]{
                    hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                    sdf.format(hoaDon.getNgayLapHD()), dft.format(hoaDon.getTongTien())
                });
            }

            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    public static void xoaDLTable() {
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTimSDT = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        btnCTHD = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        btnInHD = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Tìm kiếm hoá đơn theo số điện thoại: ");

        txtTimSDT.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnTim.setBackground(new java.awt.Color(0, 153, 153));
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search-icon-32.png"))); // NOI18N
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnCTHD.setBackground(new java.awt.Color(0, 153, 153));
        btnCTHD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file.png"))); // NOI18N
        btnCTHD.setText("Xem chi tiết");
        btnCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTHDActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(0, 153, 153));
        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/xoa.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH HOÁ ĐƠN BÁN HÀNG");

        tblHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        btnInHD.setBackground(new java.awt.Color(0, 153, 153));
        btnInHD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnInHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printer.png"))); // NOI18N
        btnInHD.setText("In hoá đơn");
        btnInHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(txtTimSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(btnCTHD)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnInHD)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(txtTimSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInHD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTHDActionPerformed
        int row = tblHoaDon.getSelectedRow();
        if (row != -1) {
            ChiTietHoaDon_Form a;
            try {
                a = new ChiTietHoaDon_Form(parentForm, true);
                a.setLocationRelativeTo(parentForm);
                a.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(ChiTietHoaDon_Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(parentForm, "Bạn cần chọn hoá đơn để xem chi tiết");
        }
    }//GEN-LAST:event_btnCTHDActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tblHoaDon.getSelectedRow();
        if (row != -1) {
            if (MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn xoá hoá đơn này không?", "Hỏi")
                    == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                HoaDonDAO hd_dao = new HoaDonDAO();
                ChiTietHDDAO cthd_dao = new ChiTietHDDAO();
                String id = tblModel.getValueAt(row, 0).toString();
                cthd_dao.delete(id);
                if (hd_dao.delete(id)) {
                    MessageDialogHelper.showMessageDialog(parentForm, "Xoá thành công", "Thông báo");
                    xoaDLTable();
                    loadDataToTable();
                } else {
                    MessageDialogHelper.showMessageDialog(parentForm, "Xoá thất bại", "Cảnh báo");
                }
            } catch (Exception e) {
                e.printStackTrace();
                MessageDialogHelper.showErrorDialog(parentForm,
                        e.getMessage(), "Lỗi");
            }
        } else {
            MessageDialogHelper.showMessageDialog(parentForm, "Bạn cần chọn dòng để xoá", "Thông báo");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        try {
            DecimalFormat dft = new DecimalFormat("###,###,### VND");
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String ma = txtTimSDT.getText();
            List<HoaDon> list = hd_dao.getDSHDTheoSDTKH(ma);
            xoaDLTable();
            for (HoaDon hoaDon : list) {
                tblModel.addRow(new Object[]{
                    hoaDon.getMaHD(), hoaDon.getNhanVien().getHoTen(), hoaDon.getKhachHang().getHoTen(),
                    sdf.format(hoaDon.getNgayLapHD()), dft.format(hoaDon.getTongTien())
                });
            }
        } catch (Exception ex) {
            Logger.getLogger(QLHoaDon_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnInHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHDActionPerformed
//        XuatHoaDonBH_Form a;
//        try {
//            a = new XuatHoaDonBH_Form();
//            a.setLocationRelativeTo(parentForm);
//
//            a.loadDaTaVaoTable();
//            a.LoadHoaDon();
//            a.setVisible(true);
//            a.printingHoaDon();
//        } catch (Exception ex) {
//            Logger.getLogger(QLHoaDon_Form.class.getName()).log(Level.SEVERE, null, ex);
//        }

        try {
            int row = tblHoaDon.getSelectedRow();
            if (row != -1) {
                String maHD = tblModel.getValueAt(row, 0).toString();
                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rpt.jrxml");

                map.put("maHD", maHD);
                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            } else {
                MessageDialogHelper.showMessageDialog(parentForm, "Bạn cần chọn hoá đơn để in", "Thông báo");
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }


    }//GEN-LAST:event_btnInHDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTHD;
    private javax.swing.JButton btnInHD;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtTimSDT;
    // End of variables declaration//GEN-END:variables
}
