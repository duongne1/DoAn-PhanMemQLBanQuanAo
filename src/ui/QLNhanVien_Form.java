/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import dao.NhanVienDAO;
import dao.TaiKhoanDAO;
import entity.NhanVien;
import entity.TaiKhoan;
import helper.DataVaildator;
import helper.MessageDialogHelper;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QLNhanVien_Form extends javax.swing.JPanel {

    private DefaultTableModel tblModel;
    private MainForm parentForm;
    private TaiKhoanDAO tk_dao;
    private NhanVienDAO nv_dao;

    /**
     * Creates new form ThemNhanVien
     */
    public QLNhanVien_Form() throws Exception {
        tk_dao = new TaiKhoanDAO();
        nv_dao = new NhanVienDAO();
        initComponents();
        initTable();
        loadDataToTable1();

        List<TaiKhoan> ls = tk_dao.finAll();
        cboTK.removeAllItems();
        for (TaiKhoan item : ls) {

            cboTK.addItem(item.getMaTK());
        }
    }

    public void loadDataToTable1() {
        try {
            NhanVienDAO nv = new NhanVienDAO();
            List<NhanVien> list = nv.finAll();

            tblModel.setRowCount(0);
            for (NhanVien nhanVien : list) {
                String gt = "";
                if (nhanVien.isGioiTinh() == true) {
                    gt = "Nam";
                } else {
                    gt = "Nữ";
                }
                {

                    tblModel.addRow(new Object[]{
                        nhanVien.getMaNV(), nhanVien.getHoTen(), gt, nhanVien.getNgaySinh(), nhanVien.getCmnd(),
                        nhanVien.getSoDT(), nhanVien.getDiaChi(), nhanVien.getTaiKhoan().getMaTK()
                    });
                }
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã nhân viên", "Tên nhân viên", "Giới tính", "Ngày sinh", "CMND", "Số điện thoại", "Địa chỉ", "Mã tài khoản"});
        tblNV.setModel(tblModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        lblGioiTinh1 = new javax.swing.JLabel();
        lblGioiTinh2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboTK = new javax.swing.JComboBox<>();
        btnLamMoi = new javax.swing.JButton();
        btnThemNV = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNV = new javax.swing.JTable();
        dcsNgaySinh = new com.toedter.calendar.JDateChooser();

        lblMaNV.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblMaNV.setText("Mã nhân viên:");

        txtMaNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtMaNV.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaNV.setEnabled(false);

        txtTenNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Tên nhân viên:");

        lblGioiTinh.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGioiTinh.setText("Ngày sinh:");

        buttonGroup1.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdoNu.setText("Nữ");

        lblGioiTinh1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGioiTinh1.setText("Giới tính:");

        lblGioiTinh2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGioiTinh2.setText("Số điện thoại:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("CMND: ");

        txtCMND.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMNDActionPerformed(evt);
            }
        });

        txtSDT.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText("Mã tài khoản:");

        txtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setText("Địa chỉ:");

        cboTK.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnLamMoi.setBackground(new java.awt.Color(0, 153, 153));
        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lam_moi.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnThemNV.setBackground(new java.awt.Color(0, 153, 153));
        btnThemNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnThemNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/them.png"))); // NOI18N
        btnThemNV.setText("Thêm");
        btnThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNVActionPerformed(evt);
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(0, 153, 153));
        btnCapNhat.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-document-edit-icon-16.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(0, 153, 153));
        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-document-edit-icon-16.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblNV.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNV);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        dcsNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThemNV)
                                .addGap(18, 18, 18)
                                .addComponent(btnLamMoi)
                                .addGap(18, 18, 18)
                                .addComponent(btnCapNhat))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(lblGioiTinh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGioiTinh2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(69, 69, 69)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cboTK, 0, 265, Short.MAX_VALUE)
                                            .addComponent(txtTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                            .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                            .addComponent(dcsNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa)))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGioiTinh1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rdoNu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dcsNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblGioiTinh2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTK, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    private void btnThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNVActionPerformed
        try {
            if (checkData() == true) {
                String ma = txtMaNV.getText();
                String ten = txtTenNV.getText();
                boolean gt;
                if (rdoNam.isSelected()) {
                    gt = true;
                } else {
                    gt = false;
                }
                Date ngaySinh = dcsNgaySinh.getDate();
                int cmnd = Integer.valueOf(txtCMND.getText());
                String sdt = txtSDT.getText();
                String diaChi = txtDiaChi.getText();
                String taiKhoan = (String) cboTK.getSelectedItem();
                TaiKhoan tk = tk_dao.getTaiKhoanByID(taiKhoan);

                NhanVien nv = new NhanVien(ma, ten, gt, ngaySinh, cmnd, sdt, diaChi, tk);
                if (nv_dao.insert(nv)) {
                    MessageDialogHelper.showMessageDialog(parentForm, "Thêm nhân viên thành công", "Thông báo");
                    loadDataToTable1();
                } else {
                    MessageDialogHelper.showMessageDialog(parentForm, "Thêm nhân viên thất bại", "Cảnh báo");
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnThemNVActionPerformed

    private void tblNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNVMouseClicked
        try {
            int row = tblNV.getSelectedRow();
            if (row >= 0) {
                String id = (String) tblNV.getValueAt(row, 0);
                NhanVienDAO dao = new NhanVienDAO();
                NhanVien nv = nv_dao.getNhanVienByID(id);
                if (nv != null) {
                    txtMaNV.setText(nv.getMaNV());
                    txtTenNV.setText(nv.getHoTen());
                    if (String.valueOf(nv.isGioiTinh()).equals("Nam")) {
                        rdoNam.isSelected();
                    } else {
                        rdoNu.isSelected();
                    }
                    dcsNgaySinh.setDate(nv.getNgaySinh());
                    txtCMND.setText(String.valueOf(nv.getCmnd()));
                    txtSDT.setText(nv.getSoDT());
                    txtDiaChi.setText(nv.getDiaChi());
                    cboTK.setSelectedItem(nv.getTaiKhoan().getMaTK());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblNVMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        txtMaNV.setText("");
        txtTenNV.setText("");
        txtCMND.setText("");
        txtDiaChi.setText("");
        cboTK.setSelectedIndex(0);
        txtSDT.setText("");
        dcsNgaySinh.setDate(null);

    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
//        StringBuilder sb = new StringBuilder();
//        DataVaildator.vaildateEmpty(txtMaNV, sb, "Mã nhan vien không được để trống");
//        DataVaildator.vaildateEmpty(txtTenNV, sb, "Tên nhan vien không được để trống");
//        if (sb.length() > 0) {
//            MessageDialogHelper.showErrorDialog(parentForm, sb.toString(), "Lỗi");
//            return;
//        }
        try {
            if (checkData() == true) {
                String ma = txtMaNV.getText();
                String ten = txtTenNV.getText();
                boolean gt;
                if (rdoNam.isSelected()) {
                    gt = true;
                } else {
                    gt = false;
                }
                Date ngaySinh = dcsNgaySinh.getDate();
                int cmnd = Integer.valueOf(txtCMND.getText());
                String sdt = txtSDT.getText();
                String diaChi = txtDiaChi.getText();
                String taiKhoan = (String) cboTK.getSelectedItem();
                TaiKhoan tk = tk_dao.getTaiKhoanByID(taiKhoan);

                NhanVien nv = new NhanVien(ma, ten, gt, ngaySinh, cmnd, sdt, diaChi, tk);

                if (nv_dao.update(nv)) {
                    MessageDialogHelper.showMessageDialog(parentForm, "Cập nhật nhân viên thành công", "Thông báo");
                    loadDataToTable1();
                } else {
                    MessageDialogHelper.showMessageDialog(parentForm, "Cập nhật nhân viên thất bại", "Cảnh báo");
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm,
                    e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void txtCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMNDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMNDActionPerformed

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tblNV.getSelectedRow();
        if (row != 1) {
            if (MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn xoá nhân viên này không?", "Hỏi")
                    == JOptionPane.NO_OPTION) {
                return;
            }
        }
        try {
            NhanVienDAO dao = new NhanVienDAO();
            String id = tblModel.getValueAt(row, 0).toString();
            if (dao.delete(id)) {
                MessageDialogHelper.showMessageDialog(parentForm, "Nhân viên đã được xoá", "Thông báo");
                loadDataToTable1();
            } else {
                JOptionPane.showMessageDialog(parentForm, "Xoá thất bại");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentForm, "Không thể xoá nhân viên này");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private boolean checkData() throws Exception {
        String tenNV = txtTenNV.getText().trim();
        String cmnd = txtCMND.getText().trim();
        String diaChi = txtDiaChi.getText().trim();
        String soDT = txtSDT.getText().trim();
        Date ngaySinh = dcsNgaySinh.getDate();
        String dt = soDT + "          ";

        if (!(tenNV.length() > 0)) {
            JOptionPane.showMessageDialog(parentForm, "Tên không được để trống");
            txtTenNV.requestFocus();
            return false;
        }
        if (!tenNV.matches("^[^0-9]+$")) {
            JOptionPane.showMessageDialog(parentForm, "Tên không được có số");
            txtTenNV.requestFocus();
            return false;
        }

        if ((ngaySinh == null)) {
            JOptionPane.showMessageDialog(parentForm, "Ngày sinh không được để trống");
            dcsNgaySinh.requestFocus();
            return false;
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
            Date ngay = new java.sql.Date(ngaySinh.getTime());
            String namSinh = sdf.format(ngay);

            LocalDate now = java.time.LocalDate.now();
            int namHT = now.getYear();
            if (namHT - Integer.valueOf(namSinh) < 18) {
                JOptionPane.showMessageDialog(parentForm, "Nhân viên phải đủ 18 tuổi");
                dcsNgaySinh.requestFocus();
                return false;
            }
        }

        if (!(cmnd.length() > 0 && cmnd.matches("^(\\d{8})$"))) {
            JOptionPane.showMessageDialog(parentForm, "CMND phải có 8 số ");
            txtCMND.requestFocus();
            return false;
        } else {
            List<NhanVien> dsNV = nv_dao.finAll();
            for (NhanVien nhanVien : dsNV) {
                if (nhanVien.getCmnd() == Integer.valueOf(cmnd)) {
                    JOptionPane.showMessageDialog(parentForm, "CMND đã tồn tại");
                    txtCMND.requestFocus();
                    return false;
                }
            }
        }
        if (!(diaChi.length() > 0)) {
            JOptionPane.showMessageDialog(parentForm, "Địa chỉ không được để trống");
            txtDiaChi.requestFocus();
            return false;
        }
        if (!(soDT.length() > 0 && soDT.matches("^0\\d{9}"))) {
            JOptionPane.showMessageDialog(this, "Số điện thoại gồm dãy 10 số bắt đầu từ số 0");
            txtSDT.requestFocus();
            return false;
        } else {
            List<NhanVien> dsNV = nv_dao.finAll();
            for (NhanVien nhanVien : dsNV) {
                if (nhanVien.getSoDT().equalsIgnoreCase(dt)) {
                    JOptionPane.showMessageDialog(parentForm, "Số điện thoại đã tồn tại");
                    txtSDT.requestFocus();
                    return false;
                }
            }
        }
        return true;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnThemNV;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboTK;
    private com.toedter.calendar.JDateChooser dcsNgaySinh;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblGioiTinh1;
    private javax.swing.JLabel lblGioiTinh2;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNV;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
}
