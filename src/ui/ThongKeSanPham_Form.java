/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import connect.DatabaseHelper;
import dao.ThongKeSanPhamDAO;
import entity.ChiTietHD;
import entity.SanPham;
import helper.MessageDialogHelper;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import static ui.QLHoaDon_Form.parentForm;
import static ui.QLHoaDon_Form.tblHoaDon;
import static ui.QLHoaDon_Form.tblModel;

/**
 *
 * @author ADMIN
 */
public class ThongKeSanPham_Form extends javax.swing.JPanel {

    private MainForm parentForm;
    public static DefaultTableModel tblModel;
    private ThongKeSanPhamDAO tksp_dao;

    /**
     * Creates new form ThongKeSanPhamForm
     */
    public ThongKeSanPham_Form() {
        tksp_dao = new ThongKeSanPhamDAO();
        initComponents();

        initTable();
        loadDataToTable();
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng bán"});
        tblSP.setModel(tblModel);
    }

    public void loadDataToTable() {
        try {
            ThongKeSanPhamDAO tksp = new ThongKeSanPhamDAO();
            List<SanPham> list = tksp_dao.thongKeSP();
            int i = 0;
            tblModel.setRowCount(0);
            for (SanPham sanPham : list) {
                i++;
                tblModel.addRow(new Object[]{
                    i, sanPham.getMaSP(), sanPham.getTenSP(),
                    sanPham.getSoLuong()

                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        ckThang = new javax.swing.JCheckBox();
        ckNam = new javax.swing.JCheckBox();
        ckNgay = new javax.swing.JCheckBox();
        btnThongKe = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        cboThang = new javax.swing.JComboBox<>();
        cboNam = new javax.swing.JComboBox<>();
        btnInBaoCao = new javax.swing.JButton();
        dcsNgay = new com.toedter.calendar.JDateChooser();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        tblSP.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblSP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TOP 5 SẢN PHẨM BÁN CHẠY");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thống kê sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel30.setText("Ngày:");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel31.setText("Tháng:");

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel32.setText("Năm:");

        ckThang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckThang.setText("Thống kê theo tháng");
        ckThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckThangActionPerformed(evt);
            }
        });

        ckNam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckNam.setText("Thống kê theo năm");

        ckNgay.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ckNgay.setText("Thống kê theo ngày");

        btnThongKe.setBackground(new java.awt.Color(0, 153, 153));
        btnThongKe.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/analysis.png"))); // NOI18N
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(0, 153, 153));
        jButton16.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file.png"))); // NOI18N
        jButton16.setText("Xem chi tiết phiếu");

        cboThang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cboNam.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2021", "2020", "2019" }));

        btnInBaoCao.setBackground(new java.awt.Color(0, 153, 153));
        btnInBaoCao.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnInBaoCao.setText("In báo cáo");
        btnInBaoCao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInBaoCaoActionPerformed(evt);
            }
        });

        dcsNgay.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(ckNgay)
                        .addGap(222, 222, 222)
                        .addComponent(ckThang)
                        .addGap(148, 148, 148)
                        .addComponent(ckNam))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dcsNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(btnThongKe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton16)
                        .addGap(18, 18, 18)
                        .addComponent(btnInBaoCao)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboNam, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboThang)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dcsNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ckNam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ckThang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ckNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnInBaoCao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ckThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckThangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckThangActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        try {
            if (ckNam.isSelected() && ckThang.isSelected() == false && ckNgay.isSelected() == false) {
                xoaDLTable();
                int nam = Integer.valueOf(cboNam.getSelectedItem().toString());
                ThongKeSanPhamDAO tksp = new ThongKeSanPhamDAO();
                List<SanPham> list = tksp_dao.thongKeSPTheoNam(nam);
                tblModel.setRowCount(0);
                int i = 0;
                for (SanPham sanPham : list) {
                    i++;
                    tblModel.addRow(new Object[]{
                        i, sanPham.getMaSP(), sanPham.getTenSP(),
                        sanPham.getSoLuong()

                    });
                }
            } else if (ckThang.isSelected()) {
                xoaDLTable();
                String thang = cboThang.getSelectedItem().toString();
                String nam = cboNam.getSelectedItem().toString();
                ThongKeSanPhamDAO tksp = new ThongKeSanPhamDAO();
                List<SanPham> list = tksp_dao.thongKeSPTheoThangNam(thang, nam);
                tblModel.setRowCount(0);
                int i = 0;
                for (SanPham sanPham : list) {
                    i++;
                    tblModel.addRow(new Object[]{
                        i, sanPham.getMaSP(), sanPham.getTenSP(),
                        sanPham.getSoLuong()

                    });
                }
            } else if (ckNgay.isSelected()) {
                xoaDLTable();
                Date ngay = dcsNgay.getDate();
                SimpleDateFormat sdfnam = new SimpleDateFormat("yyyy");
                SimpleDateFormat sdfthang = new SimpleDateFormat("MM");
                SimpleDateFormat sdfngay = new SimpleDateFormat("dd");

                String nam1 = sdfnam.format(ngay);
                String thang1 = sdfthang.format(ngay);;
                String ngay1 = sdfngay.format(ngay);

                ThongKeSanPhamDAO tksp = new ThongKeSanPhamDAO();
                List<SanPham> list = tksp_dao.thongKeSPTheoNgayThangNam(ngay1, thang1, nam1);
                tblModel.setRowCount(0);
                int i = 0;
                for (SanPham sanPham : list) {
                    i++;
                    tblModel.addRow(new Object[]{
                        i, sanPham.getMaSP(), sanPham.getTenSP(),
                        sanPham.getSoLuong()

                    });
                }
            } else {
                xoaDLTable();
                ThongKeSanPhamDAO tksp = new ThongKeSanPhamDAO();
                List<SanPham> list = tksp_dao.thongKeSP();
                tblModel.setRowCount(0);
                int i = 0;
                for (SanPham sanPham : list) {
                    i++;
                    tblModel.addRow(new Object[]{
                        i, sanPham.getMaSP(), sanPham.getTenSP(),
                        sanPham.getSoLuong()

                    });
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnInBaoCaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInBaoCaoActionPerformed
//        try {
//            XuatBaoCaoSP_Form a;
//            a = new XuatBaoCaoSP_Form();
//            a.setSize(1019, 770);
//            a.setTitle("Phiếu báo cáo sản phẩm");
//            a.setLocationRelativeTo(parentForm);
//
//            a.LoadTable();
//            a.setVisible(true);
//
//            a.printingHoaDon();
//        } catch (Exception ex) {
//            Logger.getLogger(ThongKeSanPham_Form.class.getName()).log(Level.SEVERE, null, ex);
//        }

        try {
            if (ckNam.isSelected() && ckThang.isSelected() == false && ckNgay.isSelected() == false) {
                String nam = cboNam.getSelectedItem().toString();
                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rptSP1.jrxml");

                map.put("nam", nam);
                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            } else if (ckThang.isSelected()) {
                String thang = cboThang.getSelectedItem().toString();
                String nam = cboNam.getSelectedItem().toString();
                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rptSP2.jrxml");

                map.put("thang", thang);
                map.put("nam", nam);
                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            } else if (ckNgay.isSelected()) {
                Date ngay = dcsNgay.getDate();
                SimpleDateFormat sdfnam = new SimpleDateFormat("yyyy");
                SimpleDateFormat sdfthang = new SimpleDateFormat("MM");
                SimpleDateFormat sdfngay = new SimpleDateFormat("dd");

                String nam1 = sdfnam.format(ngay);
                String thang1 = sdfthang.format(ngay);;
                String ngay1 = sdfngay.format(ngay);

                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rptSP3.jrxml");

                map.put("nam", nam1);
                map.put("thang", thang1);
                map.put("ngay", ngay1);
                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            } else {
                Hashtable map = new Hashtable();
                JasperReport report = JasperCompileManager.compileReport("src/ui/rptSP4.jrxml");

                java.sql.Connection con = DatabaseHelper.opConnection();

                JasperPrint p = JasperFillManager.fillReport(report, map, con);
                JasperViewer.viewReport(p, false);
                JasperExportManager.exportReportToPdfFile(p, "test.pdf");
            }

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }


    }//GEN-LAST:event_btnInBaoCaoActionPerformed

    public void xoaDLTable() {
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInBaoCao;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JCheckBox ckNam;
    private javax.swing.JCheckBox ckNgay;
    private javax.swing.JCheckBox ckThang;
    private com.toedter.calendar.JDateChooser dcsNgay;
    private javax.swing.JButton jButton16;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblSP;
    // End of variables declaration//GEN-END:variables

    private void setLocationRelativeTo(MainForm parentForm) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
